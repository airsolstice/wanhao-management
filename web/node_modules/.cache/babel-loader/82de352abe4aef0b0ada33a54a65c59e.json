{"ast":null,"code":"import \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n// http请求拦截器\naxios.interceptors.request.use(function (config) {\n  if (config.method.toUpperCase() === \"GET\") {\n    config.url = config.url.indexOf(\"?\") > 0 ? config.url + \"&clearCache=\" + new Date().valueOf() : config.url + \"?clearCache=\" + new Date().valueOf();\n  }\n\n  if (config.method.toUpperCase() === \"POST\") {\n    if (Object.prototype.toString.call(config.data) === \"[object FormData]\") {\n      console.log(\"数据类型\", Object.prototype.toString.call(config.data));\n    } else {\n      config.data = qs.stringify(config.data); //序列化\n\n      config.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n  }\n\n  config.headers[\"Authorization\"] = window.localStorage.getItem(\"token\") ? window.localStorage.getItem(\"token\") : '';\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // http响应拦截器\n\nvar tipLock = false;\naxios.interceptors.response.use(function (data) {\n  if (data.data[\"code\"] && data.data[\"code\"] === -2) {\n    window.location.hash = \"#/login\";\n  }\n\n  window.localStorage.setItem('token', data.headers.authorization);\n  return data;\n}, function (err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        err.message = \"请求错误\";\n        break;\n\n      case 401:\n        err.message = \"登录已过期，请重新登录！\";\n        window.location.hash = \"#/login\";\n        break;\n\n      case 403:\n        err.message = \"拒绝访问\";\n        window.location.hash = \"#/notAuth\";\n        break;\n\n      case 404:\n        err.message = \"\\u8BF7\\u6C42\\u5730\\u5740\\u51FA\\u9519: \".concat(err.response.config.url);\n        break;\n\n      case 405:\n        err.message = \"License\\u5DF2\\u8FC7\\u671F\\uFF0C\\u8BF7\\u91CD\\u65B0\\u4E0A\\u4F20\";\n        window.location.hash = \"#/info/license\";\n        break;\n\n      case 408:\n        err.message = \"请求超时\";\n        break;\n\n      case 500:\n        err.message = \"服务器内部错误\";\n        break;\n\n      case 501:\n        err.message = \"服务未实现\";\n        break;\n\n      case 502:\n        err.message = \"网关错误\";\n        break;\n\n      case 503:\n        err.message = \"服务不可用\";\n        break;\n\n      case 504:\n        err.message = \"网关超时\";\n        break;\n\n      case 505:\n        err.message = \"HTTP版本不受支持\";\n        break;\n\n      default:\n    }\n  }\n\n  if (!tipLock) {\n    tipLock = true;\n\n    if (err.response.status === 401 || err.response.status === 405) {\n      _notification.info({\n        message: '提示',\n        description: err.message\n      });\n    } else {\n      _notification.error({\n        message: '出错啦',\n        description: err.message\n      });\n    }\n\n    setTimeout(function () {\n      //需要了解一下js执行机制,这是一个异步宏任务\n      tipLock = false;\n    }, 1000);\n  }\n\n  return Promise.reject(err);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/xueqinfan/fanfan-code-2020/wanhao-management/web/src/api/axios.js"],"names":["axios","qs","interceptors","request","use","config","method","toUpperCase","url","indexOf","Date","valueOf","Object","prototype","toString","call","data","console","log","stringify","headers","window","localStorage","getItem","error","Promise","reject","tipLock","response","location","hash","setItem","authorization","err","status","message","info","description","setTimeout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport { notification } from 'antd';\n// http请求拦截器\naxios.interceptors.request.use(\n  config => {\n    if (config.method.toUpperCase() === \"GET\") {\n      config.url =\n        config.url.indexOf(\"?\") > 0\n          ? config.url + \"&clearCache=\" + new Date().valueOf()\n          : config.url + \"?clearCache=\" + new Date().valueOf();\n    }\n    if (config.method.toUpperCase() === \"POST\") {\n      if (Object.prototype.toString.call(config.data) === \"[object FormData]\") {\n        console.log(\"数据类型\", Object.prototype.toString.call(config.data));\n      } else {\n        config.data = qs.stringify(config.data); //序列化\n        config.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n      }\n    }\n    config.headers[\"Authorization\"] = window.localStorage.getItem(\"token\") ? window.localStorage.getItem(\"token\") : '';\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n// http响应拦截器\nlet tipLock = false;\naxios.interceptors.response.use(\n  data => {\n    if (data.data[\"code\"] && data.data[\"code\"] === -2) {\n      window.location.hash = \"#/login\";\n    }\n    window.localStorage.setItem('token', data.headers.authorization)\n    return data;\n  },\n  err => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          err.message = \"请求错误\";\n          break;\n        case 401:\n          err.message = \"登录已过期，请重新登录！\";\n          window.location.hash = \"#/login\";\n          break;\n        case 403:\n          err.message = \"拒绝访问\";\n          window.location.hash = \"#/notAuth\";\n          break;\n        case 404:\n          err.message = `请求地址出错: ${err.response.config.url}`;\n          break;\n        case 405:\n          err.message = `License已过期，请重新上传`;\n          window.location.hash = \"#/info/license\";\n          break;\n        case 408:\n          err.message = \"请求超时\";\n          break;\n        case 500:\n          err.message = \"服务器内部错误\";\n          break;\n        case 501:\n          err.message = \"服务未实现\";\n          break;\n        case 502:\n          err.message = \"网关错误\";\n          break;\n        case 503:\n          err.message = \"服务不可用\";\n          break;\n        case 504:\n          err.message = \"网关超时\";\n          break;\n        case 505:\n          err.message = \"HTTP版本不受支持\";\n          break;\n        default:\n      }\n    }\n    if(!tipLock){\n      tipLock = true;\n      if (err.response.status === 401 || err.response.status === 405) {\n        notification.info({\n          message: '提示',\n          description: err.message\n        })\n      }else{\n        notification.error({\n          message: '出错啦',\n          description: err.message\n        });\n      }\n      setTimeout(function () {   //需要了解一下js执行机制,这是一个异步宏任务\n        tipLock = false;\n      }, 1000)\n    }\n    return Promise.reject(err);\n  }\n);\nexport default axios;\n"]},"metadata":{},"sourceType":"module"}